name: Build and Deploy

on:
  push:
    branches: [ main ]

env:
  # Use secrets.IMAGE_NAME should be like 'myuser/myrepo' or 'ghcr.io/org/repo'
  IMAGE: ${{ secrets.IMAGE_NAME }}

jobs:
  build-and-push:
    name: Build and push image
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.meta.outputs.image }}
      image_digest: ${{ steps.build.outputs.digest }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        id: build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.IMAGE_NAME }}:${{ github.sha }}
            ${{ secrets.IMAGE_NAME }}:latest

      - name: Set image output
        id: meta
        run: |
          echo "image=${{ secrets.IMAGE_NAME }}:${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "digest=${{ steps.build.outputs.digest }}" >> $GITHUB_OUTPUT

  deploy:
    name: Deploy to server (self-hosted iot-srv-docker)
    needs: build-and-push
    # Run the deploy step on your self-hosted Linux x64 runner with labels below
    runs-on: [self-hosted, iot-srv-docker, linux, x64, docker-self-hosted]
    steps:
      - name: Deploy via SSH and Docker pull
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: |
            set -e
            # Login to registry on server using repo secrets (use token in DOCKER_PASSWORD)
            REG="${{ secrets.DOCKER_REGISTRY }}"
            if [ -z "$REG" ]; then
              REG="docker.io"
            fi
            echo "Logging in to registry $REG as ${{ secrets.DOCKER_USERNAME }}"
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login "$REG" -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin || true

            # Pull latest and the exact digest we just pushed (ensures image matches by digest)
            echo "Pulling images: ${{ secrets.IMAGE_NAME }}:latest and ${{ secrets.IMAGE_NAME }}@${{ needs.build-and-push.outputs.image_digest }}"
            docker pull ${{ secrets.IMAGE_NAME }}:latest || true
            docker pull ${{ secrets.IMAGE_NAME }}@${{ needs.build-and-push.outputs.image_digest }} || true
            # Optional: update a docker-compose setup in DEPLOY_PATH
            if [ -n "${{ secrets.DEPLOY_PATH }}" ]; then
              cd ${{ secrets.DEPLOY_PATH }}
              # If your docker-compose.yml references image:latest, this will pull the new latest and restart
              docker compose pull || true
              docker compose up -d --remove-orphans
            else
              echo "No DEPLOY_PATH specified; pulled images only"
            fi

      - name: Post-deploy sleep/check
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: |
            docker ps --filter "ancestor=${{ secrets.IMAGE_NAME }}" --format "{{.ID}} {{.Image}} {{.Status}}" || true

# Required repository secrets:
# - DOCKER_REGISTRY (e.g. docker.io or ghcr.io)
# - DOCKER_USERNAME
# - DOCKER_PASSWORD
# - IMAGE_NAME (e.g. myuser/myrepo or ghcr.io/org/repo)
# - DEPLOY_HOST (server IP or hostname)
# - DEPLOY_USER (ssh user)
# - SSH_PRIVATE_KEY (private key for DEPLOY_USER)
# Optional:
# - DEPLOY_PATH (path to directory containing docker-compose.yml on server)
# - DEPLOY_PORT (ssh port, default 22)