name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: [self-hosted, iot-srv-docker, X64, Linux, docker-self-hosted]
    steps:
      - name: Checkout code (manual, PAT fallback)
        env:
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          echo "Manual checkout with token fallback (PERSONAL_ACCESS_TOKEN -> GITHUB_TOKEN)"
          REPO="${{ github.repository }}"
          SHA="${{ github.sha }}"
          # choose token: prefer PERSONAL_ACCESS_TOKEN, else GITHUB_TOKEN
          TOKEN="$PERSONAL_ACCESS_TOKEN"
          if [ -z "$TOKEN" ]; then
            TOKEN="$GITHUB_TOKEN"
            TOKEN_SOURCE="GITHUB_TOKEN"
          else
            TOKEN_SOURCE="PERSONAL_ACCESS_TOKEN"
          fi
          if [ -z "$TOKEN" ]; then
            echo "ERROR: No token available for checkout. Set secrets.PERSONAL_ACCESS_TOKEN or rely on GITHUB_TOKEN." >&2
            exit 1
          fi
          echo "Using token from: $TOKEN_SOURCE"
          # Configure remote with token for authentication (token is masked)
          git init
          git remote add origin "https://x-access-token:${TOKEN}@github.com/$REPO.git"
          git fetch --depth=1 origin "$SHA"
          git checkout -f "$SHA"
          # If repository uses git-lfs, pull LFS objects (only if git-lfs is present)
          if command -v git-lfs >/dev/null 2>&1; then
            echo "git-lfs detected, pulling LFS objects..."
            git lfs install --local || true
            git lfs pull || true
          else
            echo "git-lfs not installed; skipping LFS pull"
          fi
      - name: Ensure Docker is available on runner
        run: |
          echo "Checking docker availability..."
          docker --version
          docker info || true

      - name: Log in to GitHub Container Registry (ghcr)
        env:
          GHCR_PAT: ${{ secrets.GHCR_PAT }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # prefer a provided GHCR PAT, otherwise use GITHUB_TOKEN
          TOKEN="$GHCR_PAT"
          if [ -z "$TOKEN" ]; then
            TOKEN="$GITHUB_TOKEN"
          fi
          if [ -z "$TOKEN" ]; then
            echo "ERROR: No GHCR token available (set secrets.GHCR_PAT or secrets.GITHUB_TOKEN)" >&2
            exit 1
          fi
          echo "$TOKEN" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: Build Docker image
        run: |
          IMAGE=${{ secrets.IMAGE_NAME }}:latest
          docker build -t "$IMAGE" .

      - name: Push Docker image to ghcr
        run: |
          IMAGE=${{ secrets.IMAGE_NAME }}:latest
          docker push "$IMAGE"